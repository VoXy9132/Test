1.;В чём разница между списком и кортежом? (Кратко)
Кортежы не изменяемы в сравнении со списками.
2.;Пример декоратора. (В виде кода)
Пример:
def decor(func):
	def func1(*args, **kwargs):
		print('Я изменил функцию')
		return func(*args, **kwargs)
	return func1

@decor (Через собачку)
def func(x + y):
	return x + y

print(decor(func)(4, 6))  (В ручную без собачки)

3.;Что выполняет функция map?
map выполняет переданную функцию каждому из элементов
переданного списка.
Пример:
map(функция, список)

4.;Что такое lambda?
lambda- это анонимная функция выполняющая указаные действия с
переданными переменными.
Пример:
lamda x, y: x + y
5.;Чем множество отличается от списка?
Множество не может иметь более 1 одинакового значения, в
сравнении со списком.

6.;Для чего нужны библиотеки?
Библиотеки обьединяют в себе методы, классы и переменные, позволяя
читать их инструкции в разных питон файлах.
Пример:
import random

7.;Как работает библиотека pip?
Одни из основных  pip предназначений- это установка
сторонних библиотек python
Пример:
pip install pygame

8.;Какую роль играют циклы?
Циклы повторяют инструкции, пока верны указанные условия

9.;Что создаёт функция range?
функция range создаёт генератор
Пример:
range(стартовое число, первое не включемое в генератор число, шаг)

10.;Для чего нужны функции?
Функция следует собственным инструкциям, при её вызывании.
Пример:
def func(x, y):
  return x + y

11.;Какая функция заменяет символы в строке на другие?
Пример:
переменая.replace(' ', 'ab')

12.;False и None одно и тоже, если да, то почему?
False и None не одно и тоже, так как False обозначает булево
значение, в её случае ложь, а None обозначает пустоту в переменной

